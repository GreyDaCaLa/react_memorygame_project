[{"C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\index.js":"1","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\App.jsx":"2","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\Head\\Header.jsx":"3","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\GameFiles\\Game.jsx":"4","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\Head\\GameScore.jsx":"5","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\GameFiles\\GameVisuals.jsx":"6","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\GameFiles\\GameDecisions.jsx":"7","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\StatusBanner\\StatusBanner.jsx":"8"},{"size":207,"mtime":1632534539741,"results":"9","hashOfConfig":"10"},{"size":1989,"mtime":1632620394290,"results":"11","hashOfConfig":"10"},{"size":1147,"mtime":1632613761975,"results":"12","hashOfConfig":"10"},{"size":3266,"mtime":1632617812994,"results":"13","hashOfConfig":"10"},{"size":838,"mtime":1632613773063,"results":"14","hashOfConfig":"10"},{"size":966,"mtime":1632620366220,"results":"15","hashOfConfig":"10"},{"size":834,"mtime":1632613812912,"results":"16","hashOfConfig":"10"},{"size":2191,"mtime":1632615682474,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"dfsq50",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"20"},"C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\index.js",[],["43","44"],"C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\App.jsx",["45"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Comp/Head/Header\";\r\nimport Game from \"./Comp/GameFiles/Game\";\r\nimport StatusBanner from \"./Comp/StatusBanner/StatusBanner\";\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state={\r\n      currentScore: 0,\r\n      bestScore:0,\r\n      hasWonOnce: false,\r\n      gameCount: 0,\r\n      bestTime: 0,\r\n      currentTime: 0,\r\n    }\r\n\r\n    this.upScore = this.upScore.bind(this);\r\n    this.gameOver = this.gameOver.bind(this);\r\n    this.wonGame = this.wonGame.bind(this);\r\n\r\n  }\r\n\r\n\r\n  wonGame(){\r\n    let mid =false;\r\n    if(this.state.hasWonOnce == false){\r\n      mid = true;\r\n    }else{\r\n    }\r\n    this.setState({\r\n      hasWonOnce: mid,\r\n      bestScore: 10,\r\n      currentScore: 0,\r\n      gameCount: this.state.gameCount+1,\r\n    })\r\n  }\r\n\r\n  gameOver(){\r\n    let mid;\r\n    if(this.state.currentScore>this.state.bestScore){\r\n      mid = this.state.currentScore\r\n    }else{\r\n      mid = this.state.bestScore\r\n    }\r\n    this.setState({\r\n      bestScore: mid,\r\n      currentScore: 0,\r\n      gameCount: this.state.gameCount+1,\r\n    })\r\n\r\n  }\r\n\r\n  upScore(){\r\n    console.log(\"App - Updateing score\")\r\n    if(this.state.currentScore>=9){\r\n      this.wonGame();\r\n    }else{\r\n      this.setState({\r\n        currentScore: this.state.currentScore+1,\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Header \r\n          currentScore={this.state.currentScore} \r\n          bestScore={this.state.bestScore} \r\n          hasWonOnce={this.state.hasWonOnce} \r\n          bestTime={this.state.bestTime}\r\n        />\r\n\r\n        <StatusBanner hasWonOnce={this.state.hasWonOnce} gameCount={this.state.gameCount} />\r\n\r\n        <Game\r\n          upScore = {this.upScore}\r\n          wonGame = {this.wonGame}\r\n          gameOver = {this.gameOver}\r\n          currentScore = {this.state.currentScore}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\Head\\Header.jsx",["46"],"import React, {Component} from \"react\";\r\nimport GameScore from \"./GameScore\";\r\nimport \"./HeadStyle.css\"; \r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // console.log('Header- Construcotr-props',props);\r\n        \r\n        //this. state\r\n        //this. --- function binds\r\n\r\n    }\r\n\r\n\r\n\r\n    //the functions code like even handlers or others\r\n\r\n    // life cycle methods\r\n    //--componentDidMount\r\n    //--componentDidUpdate\r\n    //--componentWillUnmount\r\n\r\n    render(){\r\n        return(\r\n            <header> \r\n                <h1>React Memory Game</h1>\r\n                <p>\r\n                    Objective: Answer the questions to test your memory.\r\n                    <br />\r\n                    Highest score is 10!\r\n                </p>\r\n                <GameScore\r\n                    currentScore={this.props.currentScore} \r\n                    bestScore={this.props.bestScore} \r\n                    hasWonOnce={this.props.hasWonOnce} \r\n                    bestTime={this.props.bestTime}\r\n                />\r\n            </header>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\GameFiles\\Game.jsx",["47","48"],"import React, {Component} from \"react\";\r\nimport \"./GameStyle.css\";\r\nimport GameDecisions from \"./GameDecisions\";\r\nimport GameVisuals from \"./GameVisuals\";\r\n\r\n\r\nclass Game extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // console.log('Game- Construcotr-props',props);\r\n        //state\r\n        const items =[], itemscount=10;\r\n        for(let i =0;i<itemscount; i++){\r\n            //array of [visual thing, has been shown before bool\r\n            items.push([i,false]);\r\n        }\r\n        this.state={\r\n            items,\r\n            itemscount,\r\n            currentItem: Math.floor(Math.random()*itemscount),\r\n          }\r\n        console.log(\"Game -  the original state\",this.state)\r\n\r\n\r\n        // binds\r\n        this.handleChoiceClk__Yes = this.handleChoiceClk__Yes.bind(this);\r\n        this.handleChoiceClk__No = this.handleChoiceClk__No.bind(this);\r\n        this.resetSeen= this.resetSeen.bind(this);\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n    resetSeen(){\r\n        console.log(\"Game-ResetSeen reseting the array\")\r\n        const mid =[], itemscount=10;\r\n        for(let i =0;i<itemscount; i++){\r\n            //array of [visual thing, has been shown before bool\r\n            mid.push([i,false]);\r\n        }\r\n        this.setState({\r\n            items: mid\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    //the functions code like event handlers or others\r\n    handleChoiceClk__Yes(){\r\n        console.log(\"YOU CLICKED YES -- currentscore:\", this.state.currentScore);\r\n  \r\n        if(this.state.items[this.state.currentItem][1] == true ){\r\n            this.setState({\r\n                currentItem: Math.floor(Math.random()*this.state.itemscount),\r\n            }, ()=>{console.log(\"this new state after YES\",this.state)})\r\n            \r\n            this.props.upScore();\r\n            if(this.props.currentScore>=9){\r\n                this.resetSeen();  \r\n            }\r\n    \r\n        }else {\r\n            this.resetSeen();        \r\n            this.props.gameOver();\r\n        }\r\n    }\r\n\r\n    handleChoiceClk__No(){\r\n        console.log(\"YOU CLICKED NO -- currentscore:\", this.state.currentScore);\r\n        let mid;\r\n  \r\n        if(this.state.items[this.state.currentItem][1] == false ){\r\n            mid = this.state.items;\r\n            mid[this.state.currentItem][1] = true;\r\n            this.setState({\r\n                items: mid,\r\n                currentItem: Math.floor(Math.random()*this.state.itemscount),\r\n            },\r\n            ()=>{console.log(\"this new state after NO\",this.state)\r\n                })\r\n\r\n            this.props.upScore();\r\n            if(this.props.currentScore>=9){\r\n                this.resetSeen();  \r\n            }\r\n        \r\n        }else {\r\n            this.resetSeen();\r\n            this.props.gameOver();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // gameWon(){\r\n\r\n    // }\r\n\r\n    // life cycle methods\r\n    //--componentDidMount\r\n    //--componentDidUpdate\r\n    //--componentWillUnmount\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"GameItemContainer\">\r\n                <GameVisuals currentItem={this.state.items[this.state.currentItem]}/>\r\n                <GameDecisions yesClk = {this.handleChoiceClk__Yes} noClk={this.handleChoiceClk__No}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Game;\r\n\r\n\r\n","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\Head\\GameScore.jsx",["49"],"import React, {Component} from \"react\";\r\n\r\nclass GameScore extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // console.log('GameScore- Construcotr-props',props);\r\n        \r\n        //this. state\r\n        //this. --- function binds\r\n\r\n    }\r\n\r\n\r\n\r\n    //the functions code like even handlers or others\r\n\r\n    // life cycle methods\r\n    //--componentDidMount\r\n    //--componentDidUpdate\r\n    //--componentWillUnmount\r\n\r\n    render(){\r\n        return (\r\n            <div id =\"Scoreboard\">\r\n                <span>Score: {this.props.currentScore}</span>\r\n                <span>Best Score: {this.props.bestScore}</span>\r\n                {/* <span>Best time function for visibility after first win</span> */}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default GameScore;\r\n\r\n\r\n\r\n\r\n/* end */\r\n\r\n\r\n\r\n\r\n\r\n",["50","51"],"C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\GameFiles\\GameVisuals.jsx",["52"],"import React, {Component} from \"react\";\r\n\r\n\r\nclass GameVisuals extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // console.log('GameVisuals- Construcotr-props',props);\r\n        \r\n        //this. state\r\n        //this. --- function binds\r\n\r\n    }\r\n\r\n    getRandomColor(){\r\n        const rgb = Math.floor(Math.random()*255);\r\n        return rgb;\r\n      }\r\n\r\n\r\n\r\n    //the functions code like even handlers or others\r\n\r\n    // life cycle methods\r\n    //--componentDidMount\r\n    //--componentDidUpdate\r\n    //--componentWillUnmount\r\n\r\n    render(){\r\n        // console.log(\"GameVisual-rendor\",this.props.currentItem)\r\n        return(\r\n            <div id=\"GameVisuals\" style={{backgroundColor: `rgb(${Math.floor(Math.random()*255)}, ${Math.floor(Math.random()*255)}, ${Math.floor(Math.random()*255)})`}}>\r\n                <p>{this.props.currentItem[0]}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default GameVisuals;\r\n\r\n\r\n","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\GameFiles\\GameDecisions.jsx",["53"],"import React, {Component} from \"react\";\r\n\r\n\r\nclass GameDecisions extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // console.log('GameDecisions- Construcotr-props',props);\r\n        \r\n        //this. state\r\n        //this. --- function binds\r\n\r\n    }\r\n\r\n\r\n\r\n    //the functions code like even handlers or others\r\n\r\n    // life cycle methods\r\n    //--componentDidMount\r\n    //--componentDidUpdate\r\n    //--componentWillUnmount\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"GameDecisions\">\r\n                <p>Have you seen this number yet?</p>\r\n                <button id=\"Decisions-Yes\" onClick={this.props.yesClk}>Yes</button>\r\n                <button id=\"Decisions-No\" onClick={this.props.noClk}>No</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default GameDecisions;\r\n\r\n\r\n","C:\\Users\\gdele\\Desktop\\Future\\TrueCoders\\Projects\\Module1\\attempt1\\React-Repos\\react_memorygame_project\\src\\Comp\\StatusBanner\\StatusBanner.jsx",["54","55","56","57","58"],"import React, {Component} from \"react\";\r\nimport \"./BannerStyle.css\"\r\n\r\nclass StatusBanner extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // console.log('GameScoreStatusBanner- Construcotr-props',props);\r\n        \r\n        //this. state\r\n        //this. --- function binds\r\n        this.dispStatusMessage = this.dispStatusMessage.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    //the functions code like event handlers or others\r\n    dispStatusMessage(){\r\n\r\n        switch(this.props.gameCount%4){\r\n            case 0:\r\n                return(\r\n                    <div id =\"GameStatusBannerCont\">\r\n                        <span>Good Luck!!!</span>\r\n                        <span>Remember to keep your eyes open!!</span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case 1:\r\n                return(\r\n                    <div id =\"GameStatusBannerCont\">\r\n                        <span>Thanks for playing again</span>\r\n                        <span>Maybe it helps to not blink??</span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case 2:\r\n                return(\r\n                    <div id =\"GameStatusBannerCont\">\r\n                        <span>Thanks for playing again..again.</span>\r\n                        <span>there is a (insert number here)% Chance that you'll win by just clicking NO.</span>\r\n                    </div>\r\n                );\r\n                break;\r\n            case 3:\r\n                return(\r\n                    <div id =\"GameStatusBannerCont\">\r\n                        <span>Wow didn't think you'd make it this far.</span>\r\n                        <span>Going to just repeat myslef now.</span>\r\n                    </div>\r\n                );\r\n                break;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // disUnhelpfulStatusmessage(){\r\n\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // life cycle methods\r\n    //--componentDidMount\r\n    //--componentDidUpdate\r\n    //--componentWillUnmount\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            {this.dispStatusMessage()}\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default StatusBanner;\r\n\r\n\r\n\r\n\r\n/* end */\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":29,"column":30,"nodeType":"65","messageId":"66","endLine":29,"endColumn":32},{"ruleId":"67","severity":1,"message":"68","line":6,"column":5,"nodeType":"69","messageId":"70","endLine":13,"endColumn":6},{"ruleId":"63","severity":1,"message":"64","line":54,"column":56,"nodeType":"65","messageId":"66","endLine":54,"endColumn":58},{"ruleId":"63","severity":1,"message":"64","line":74,"column":56,"nodeType":"65","messageId":"66","endLine":74,"endColumn":58},{"ruleId":"67","severity":1,"message":"68","line":4,"column":5,"nodeType":"69","messageId":"70","endLine":11,"endColumn":6},{"ruleId":"59","replacedBy":"71"},{"ruleId":"61","replacedBy":"72"},{"ruleId":"67","severity":1,"message":"68","line":5,"column":5,"nodeType":"69","messageId":"70","endLine":12,"endColumn":6},{"ruleId":"67","severity":1,"message":"68","line":5,"column":5,"nodeType":"69","messageId":"70","endLine":12,"endColumn":6},{"ruleId":"73","severity":1,"message":"74","line":20,"column":9,"nodeType":"75","messageId":"76","endLine":54,"endColumn":10},{"ruleId":"77","severity":1,"message":"78","line":28,"column":17,"nodeType":"79","messageId":"80","endLine":28,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":36,"column":17,"nodeType":"79","messageId":"80","endLine":36,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":44,"column":17,"nodeType":"79","messageId":"80","endLine":44,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":52,"column":17,"nodeType":"79","messageId":"80","endLine":52,"endColumn":23},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["81"],["82"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation"]